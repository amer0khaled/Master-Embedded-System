/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif



#include"Platform_Types.h"


#define SET_BIT(REG, BIT_NUMBER)     REG |= (1U<<BIT_NUMBER)
#define TOGGLE_BIT(REG, BIT_NUMBER)  REG ^= (1U<<BIT_NUMBER)

//RCC Configuration
#define RCC_BASE             0x40021000
#define RCC_APB2ENR_OFFSET   0x18
#define RCC_APB2ENR          *(vuint32 *)(RCC_BASE + RCC_APB2ENR_OFFSET) //APB2 clock enable register
#define IOPAEN      2        //GPOIA enable bit


//GPIOA Configurations
#define GPIOA_BASE   0x40010800
#define GPIOA_CRH   *(vuint32 *)(GPIOA_BASE + 0x04) //CTRL REG
#define GPIOA_ODR   *(vuint32 *)(GPIOA_BASE + 0x0c) //Output Data REG
#define GPIOA13     (1UL<<13)


//AFIO Configuration
#define AFIO_BASE            0x40010000
#define AFIO_EXTICR1_OOFSET  0x08
#define AFIO_EXTICR1         *(vuint32 *)(AFIO_BASE + AFIO_EXTICR1_OOFSET)


//EXTI Configurations
#define EXTI_BASE         0x40010400
#define EXTI_IMR_OFFSET   0x00
#define EXTI_IMR          *(vuint32 *)(EXTI_BASE + EXTI_IMR_OFFSET)
#define EXTI_RTSR_OFFSET  0x08
#define EXTI_RTSR         *(vuint32 *)(EXTI_BASE + EXTI_RTSR_OFFSET)
#define EXTI_PR_OFFSET 0x14
#define EXTI_PR         *(vuint32 *)(EXTI_BASE + EXTI_PR_OFFSET)


//NVIC Configuration
#define SETENA *(vuint32 *)(0xE000E100)




void Clock_Init(void)
{
	// Enable Clock for GPIOA
	SET_BIT(RCC_APB2ENR, 2);

	//Enable Clock for Alternate function IO
	SET_BIT(RCC_APB2ENR, 0);
}

void GPIO_Init(void)
{
	GPIOA_CRH    &=  0xFF0FFFFF;
	GPIOA_CRH    |=  0x00200000;
}

int main(void)
{
	Clock_Init();
	GPIO_Init();

	//Map PA.0 to EXTI0
	AFIO_EXTICR1 |= (0b000 << 0);


	//Rising Trigget
	SET_BIT(EXTI_RTSR, 0);

	//Enable EXTI0 Mask
	SET_BIT(EXTI_IMR, 0);

	//Enable NVIC Mask
	SET_BIT(SETENA, 6);


	while(1);


	return 0;
}

void EXTI0_IRQHandler()
{
	//clear pinding register
	SET_BIT(EXTI_PR, 0);

	//toggle PORTA PIN13
	TOGGLE_BIT(GPIOA_ODR, 13);

}









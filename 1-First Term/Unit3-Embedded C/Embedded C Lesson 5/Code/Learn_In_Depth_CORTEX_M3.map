
Allocating common symbols
Common symbol       size              file

_stack_top          0x4               startup.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x08000000         0x00020000         xr
SRAM             0x20000000         0x00005000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map


.text           0x08000000      0x260
 *(.vectors*)
 .vectors       0x08000000       0x1c startup.o
                0x08000000                vectors
 *(.text*)
 .text          0x0800001c      0x148 main.o
                0x0800001c                _sbrk
                0x0800009c                main
                0x08000158                MemMange_Handler
 .text          0x08000164       0xfc startup.o
                0x08000164                NMI_Handler
                0x08000164                UsageFault_Handler
                0x08000164                BusFault_Handler
                0x08000164                Default_Handler
                0x08000164                HardFault_Handler
                0x08000170                Reset_Handler
 *(.rodata)
                0x08000260                _E_text = .

.glue_7         0x08000260        0x0
 .glue_7        0x00000000        0x0 linker stubs

.glue_7t        0x08000260        0x0
 .glue_7t       0x00000000        0x0 linker stubs

.vfp11_veneer   0x08000260        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x08000260        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x08000260        0x0
 .iplt          0x00000000        0x0 main.o

.rel.dyn        0x08000260        0x0
 .rel.iplt      0x00000000        0x0 main.o

.data           0x20000000        0x4 load address 0x08000260
                0x20000000                _S_data = .
 *(.data)
 .data          0x20000000        0x4 main.o
                0x20000000                R_ODR
 .data          0x20000004        0x0 startup.o
                0x20000004                . = ALIGN (0x4)
                0x20000004                _E_data = .

.igot.plt       0x20000004        0x0 load address 0x08000264
 .igot.plt      0x00000000        0x0 main.o

.bss            0x20000004     0x200c load address 0x08000264
                0x20000004                _S_bss = .
 *(.bss*)
 .bss           0x20000004        0x4 main.o
 .bss           0x20000008        0x4 startup.o
                0x20000008                i
                0x2000000c                . = ALIGN (0x4)
                0x2000000c                _E_bss = .
                0x2000100c                . = (. + 0x1000)
 *fill*         0x2000000c     0x1000 
                0x2000100c                . = ALIGN (0x4)
                0x2000100c                _heap_top = .
                0x2000200c                . = (. + 0x1000)
 *fill*         0x2000100c     0x1000 
                0x2000200c                . = ALIGN (0x4)
                0x2000200c                _stack_top = .
 COMMON         0x2000200c        0x4 startup.o

.debug          0x00000000      0xaac
 *(.debug*)
 .debug_info    0x00000000      0x219 main.o
 .debug_abbrev  0x00000219      0x136 main.o
 .debug_loc     0x0000034f       0x9c main.o
 .debug_aranges
                0x000003eb       0x20 main.o
 .debug_line    0x0000040b       0x78 main.o
 .debug_str     0x00000483      0x166 main.o
                                0x1ad (size before relaxing)
 *fill*         0x000005e9        0x3 
 .debug_frame   0x000005ec       0x64 main.o
 .debug_info    0x00000650      0x17d startup.o
 .debug_abbrev  0x000007cd       0xc6 startup.o
 .debug_loc     0x00000893       0x64 startup.o
 .debug_aranges
                0x000008f7       0x20 startup.o
 .debug_line    0x00000917       0xbd startup.o
 .debug_str     0x000009d4       0x8a startup.o
                                0x18e (size before relaxing)
 *fill*         0x00000a5e        0x2 
 .debug_frame   0x00000a60       0x4c startup.o
 *(.debug.*)
LOAD main.o
LOAD startup.o
OUTPUT(Learn_In_Depth_CORTEX_M3.elf elf32-littlearm)

.comment        0x00000000       0x11
 .comment       0x00000000       0x11 main.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 startup.o

.ARM.attributes
                0x00000000       0x33
 .ARM.attributes
                0x00000000       0x33 main.o
 .ARM.attributes
                0x00000033       0x33 startup.o

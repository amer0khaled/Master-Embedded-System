
Timers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000664  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000664  000006f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  000006f8  2**0
                  ALLOC
  3 .stab         00002100  00000000  00000000  000006f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000646  00000000  00000000  000027f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  00002e40  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000055a  00000000  00000000  00002ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001b6  00000000  00000000  0000343a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003b0  00000000  00000000  000035f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000148  00000000  00000000  000039a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000237  00000000  00000000  00003ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000024d  00000000  00000000  00003d1f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 1f 01 	jmp	0x23e	; 0x23e <__vector_10>
  2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e6       	ldi	r30, 0x64	; 100
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 36       	cpi	r26, 0x64	; 100
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 30 03 	jmp	0x660	; 0x660 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:


#define null ((void *)0)

int main()
{
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	00 d0       	rcall	.+0      	; 0x98 <main+0x6>
  98:	00 d0       	rcall	.+0      	; 0x9a <main+0x8>
  9a:	0f 92       	push	r0
  9c:	cd b7       	in	r28, 0x3d	; 61
  9e:	de b7       	in	r29, 0x3e	; 62
	DDRB |= (1<<3);
  a0:	bb 9a       	sbi	0x17, 3	; 23
	
	Timer0_Config timer;
	
	timer.Timer0_Mode    = Timer0_Mode_FastPWM_Inverting;
  a2:	82 e0       	ldi	r24, 0x02	; 2
  a4:	89 83       	std	Y+1, r24	; 0x01
	timer.P_IRQ_CallBack = null;
  a6:	1d 82       	std	Y+5, r1	; 0x05
  a8:	1c 82       	std	Y+4, r1	; 0x04
	timer.Timer0_CLK_SRC = Timer0_CLK_SRC_Internal_prescler_8;
  aa:	8a 83       	std	Y+2, r24	; 0x02
	timer.Timer0_IRQ     = Timer_IRQ_None;
  ac:	1b 82       	std	Y+3, r1	; 0x03
	
	Timer0_Init(&timer);
  ae:	ce 01       	movw	r24, r28
  b0:	01 96       	adiw	r24, 0x01	; 1
  b2:	0e 94 5f 00 	call	0xbe	; 0xbe <Timer0_Init>
	Timer0_PWM_DutyCycle(50);
  b6:	82 e3       	ldi	r24, 0x32	; 50
  b8:	0e 94 ba 00 	call	0x174	; 0x174 <Timer0_PWM_DutyCycle>
  bc:	ff cf       	rjmp	.-2      	; 0xbc <main+0x2a>

000000be <Timer0_Init>:
			APIs
===========================================
*/

void Timer0_Init(Timer0_Config * TimerCFG)
{
  be:	fc 01       	movw	r30, r24
	if(TimerCFG != 0)
  c0:	00 97       	sbiw	r24, 0x00	; 0
  c2:	09 f4       	brne	.+2      	; 0xc6 <Timer0_Init+0x8>
  c4:	4a c0       	rjmp	.+148    	; 0x15a <Timer0_Init+0x9c>
	{
		//Reset Timer Counter Register
		//TCNT0 = 0x00;
		
		//set Global Pointer By Configuration Structure
		GP_Timer0_User_Config = TimerCFG;
  c6:	90 93 61 00 	sts	0x0061, r25
  ca:	80 93 60 00 	sts	0x0060, r24
		
		//select Timer Mode
		switch(TimerCFG->Timer0_Mode)
  ce:	80 81       	ld	r24, Z
  d0:	81 30       	cpi	r24, 0x01	; 1
  d2:	41 f0       	breq	.+16     	; 0xe4 <Timer0_Init+0x26>
  d4:	81 30       	cpi	r24, 0x01	; 1
  d6:	18 f0       	brcs	.+6      	; 0xde <Timer0_Init+0x20>
  d8:	84 30       	cpi	r24, 0x04	; 4
  da:	f0 f4       	brcc	.+60     	; 0x118 <Timer0_Init+0x5a>
  dc:	0a c0       	rjmp	.+20     	; 0xf2 <Timer0_Init+0x34>
		{
			case Timer0_Mode_Normal:
			TCCR0 &= (~(1<<3)) | (~(1<<6));
  de:	83 b7       	in	r24, 0x33	; 51
  e0:	83 bf       	out	0x33, r24	; 51
			break;
  e2:	1a c0       	rjmp	.+52     	; 0x118 <Timer0_Init+0x5a>
			
			case Timer0_Mode_CTC:
			TCCR0 &= ~(1<<3);
  e4:	83 b7       	in	r24, 0x33	; 51
  e6:	87 7f       	andi	r24, 0xF7	; 247
  e8:	83 bf       	out	0x33, r24	; 51
			TCCR0 |= (1<<6);
  ea:	83 b7       	in	r24, 0x33	; 51
  ec:	80 64       	ori	r24, 0x40	; 64
  ee:	83 bf       	out	0x33, r24	; 51
			break;
  f0:	13 c0       	rjmp	.+38     	; 0x118 <Timer0_Init+0x5a>
			
			case Timer0_Mode_FastPWM_NonInverting:
			case Timer0_Mode_FastPWM_Inverting:
			TCCR0 |= (1<<3) | (1<<6);
  f2:	83 b7       	in	r24, 0x33	; 51
  f4:	88 64       	ori	r24, 0x48	; 72
  f6:	83 bf       	out	0x33, r24	; 51
			
			//make OC0 PB.3 as output pin
			DDRB |= (1<<3);
  f8:	bb 9a       	sbi	0x17, 3	; 23
			
			if (TimerCFG->Timer0_Mode == Timer0_Mode_FastPWM_Inverting)
  fa:	80 81       	ld	r24, Z
  fc:	82 30       	cpi	r24, 0x02	; 2
  fe:	21 f4       	brne	.+8      	; 0x108 <Timer0_Init+0x4a>
			{
				TCCR0 |= (1<<4) | (1<<5);
 100:	83 b7       	in	r24, 0x33	; 51
 102:	80 63       	ori	r24, 0x30	; 48
 104:	83 bf       	out	0x33, r24	; 51
 106:	08 c0       	rjmp	.+16     	; 0x118 <Timer0_Init+0x5a>
			}
			else if(TimerCFG->Timer0_Mode == Timer0_Mode_FastPWM_NonInverting)
 108:	83 30       	cpi	r24, 0x03	; 3
 10a:	31 f4       	brne	.+12     	; 0x118 <Timer0_Init+0x5a>
			{
				TCCR0 &= ~(1<<4);
 10c:	83 b7       	in	r24, 0x33	; 51
 10e:	8f 7e       	andi	r24, 0xEF	; 239
 110:	83 bf       	out	0x33, r24	; 51
				TCCR0 |= (1<<5);
 112:	83 b7       	in	r24, 0x33	; 51
 114:	80 62       	ori	r24, 0x20	; 32
 116:	83 bf       	out	0x33, r24	; 51
			break;
			
		}
		
		//set Timer Clock
		TCCR0 |= (TimerCFG->Timer0_CLK_SRC);
 118:	93 b7       	in	r25, 0x33	; 51
 11a:	81 81       	ldd	r24, Z+1	; 0x01
 11c:	89 2b       	or	r24, r25
 11e:	83 bf       	out	0x33, r24	; 51
		
		if ( (TimerCFG->Timer0_CLK_SRC == Timer0_CLK_SRC_External_T0_Falling) || (TimerCFG->Timer0_CLK_SRC == Timer0_CLK_SRC_External_T0_Rising) )
 120:	81 81       	ldd	r24, Z+1	; 0x01
 122:	86 50       	subi	r24, 0x06	; 6
 124:	82 30       	cpi	r24, 0x02	; 2
 126:	08 f4       	brcc	.+2      	; 0x12a <Timer0_Init+0x6c>
		{
			//make T0 at PB.0 as output pin
			DDRB |= (1<<0);
 128:	b8 9a       	sbi	0x17, 0	; 23
		}
		
		
		//config Timer Interrupt
		if(TimerCFG->Timer0_IRQ != Timer_IRQ_None)
 12a:	82 81       	ldd	r24, Z+2	; 0x02
 12c:	88 23       	and	r24, r24
 12e:	79 f0       	breq	.+30     	; 0x14e <Timer0_Init+0x90>
		{
			//Enable Global Interrupt Mask I-Bit at SREG
			SREG |= (1<<7);
 130:	8f b7       	in	r24, 0x3f	; 63
 132:	80 68       	ori	r24, 0x80	; 128
 134:	8f bf       	out	0x3f, r24	; 63
			
			if (TimerCFG->Timer0_IRQ == Timer_IRQ_OverFlow)
 136:	82 81       	ldd	r24, Z+2	; 0x02
 138:	81 30       	cpi	r24, 0x01	; 1
 13a:	21 f4       	brne	.+8      	; 0x144 <Timer0_Init+0x86>
			{
				TIMSK |= (1<<TOIE0);
 13c:	89 b7       	in	r24, 0x39	; 57
 13e:	81 60       	ori	r24, 0x01	; 1
 140:	89 bf       	out	0x39, r24	; 57
 142:	05 c0       	rjmp	.+10     	; 0x14e <Timer0_Init+0x90>
			}
			else if (TimerCFG->Timer0_IRQ == Timer_IRQ_CompareMatch)
 144:	82 30       	cpi	r24, 0x02	; 2
 146:	19 f4       	brne	.+6      	; 0x14e <Timer0_Init+0x90>
			{
				TIMSK |= (1<<OCIE0);
 148:	89 b7       	in	r24, 0x39	; 57
 14a:	82 60       	ori	r24, 0x02	; 2
 14c:	89 bf       	out	0x39, r24	; 57
			}
		}
		
		/* Call back function address */
		GP_IRQ_CallBack = TimerCFG->P_IRQ_CallBack;
 14e:	83 81       	ldd	r24, Z+3	; 0x03
 150:	94 81       	ldd	r25, Z+4	; 0x04
 152:	90 93 63 00 	sts	0x0063, r25
 156:	80 93 62 00 	sts	0x0062, r24
 15a:	08 95       	ret

0000015c <Timer0_DeInit>:


void Timer0_DeInit(void)
{
	// put zeros in cs0 , cs1 , cs2
	TCCR0 &= ~((1<<0)|(1<<1)|(1<<2));
 15c:	83 b7       	in	r24, 0x33	; 51
 15e:	88 7f       	andi	r24, 0xF8	; 248
 160:	83 bf       	out	0x33, r24	; 51
}
 162:	08 95       	ret

00000164 <Timer0_SetCompareValue>:

void Timer0_SetCompareValue(uint8_t TicksNum)
{
	OCR0 |= TicksNum;
 164:	9c b7       	in	r25, 0x3c	; 60
 166:	89 2b       	or	r24, r25
 168:	8c bf       	out	0x3c, r24	; 60
}
 16a:	08 95       	ret

0000016c <Timer0_GetCompareValue>:


void Timer0_GetCompareValue(uint8_t *TicksNum)
{
	*TicksNum = TCNT0;
 16c:	22 b7       	in	r18, 0x32	; 50
 16e:	fc 01       	movw	r30, r24
 170:	20 83       	st	Z, r18
}
 172:	08 95       	ret

00000174 <Timer0_PWM_DutyCycle>:

void Timer0_PWM_DutyCycle(uint8_t duty_cycle)
{
	if (GP_Timer0_User_Config->Timer0_Mode == Timer0_Mode_FastPWM_Inverting)
 174:	e0 91 60 00 	lds	r30, 0x0060
 178:	f0 91 61 00 	lds	r31, 0x0061
 17c:	90 81       	ld	r25, Z
 17e:	92 30       	cpi	r25, 0x02	; 2
 180:	f1 f4       	brne	.+60     	; 0x1be <Timer0_PWM_DutyCycle+0x4a>
	{
		OCR0 = (uint8_t)(255 - ((duty_cycle/100.0)*256));
 182:	68 2f       	mov	r22, r24
 184:	70 e0       	ldi	r23, 0x00	; 0
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	0e 94 41 02 	call	0x482	; 0x482 <__floatsisf>
 18e:	20 e0       	ldi	r18, 0x00	; 0
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	48 ec       	ldi	r20, 0xC8	; 200
 194:	52 e4       	ldi	r21, 0x42	; 66
 196:	0e 94 ab 01 	call	0x356	; 0x356 <__divsf3>
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	40 e8       	ldi	r20, 0x80	; 128
 1a0:	53 e4       	ldi	r21, 0x43	; 67
 1a2:	0e 94 cd 02 	call	0x59a	; 0x59a <__mulsf3>
 1a6:	9b 01       	movw	r18, r22
 1a8:	ac 01       	movw	r20, r24
 1aa:	60 e0       	ldi	r22, 0x00	; 0
 1ac:	70 e0       	ldi	r23, 0x00	; 0
 1ae:	8f e7       	ldi	r24, 0x7F	; 127
 1b0:	93 e4       	ldi	r25, 0x43	; 67
 1b2:	0e 94 46 01 	call	0x28c	; 0x28c <__subsf3>
 1b6:	0e 94 13 02 	call	0x426	; 0x426 <__fixunssfsi>
 1ba:	6c bf       	out	0x3c, r22	; 60
 1bc:	08 95       	ret
	}
	else if (GP_Timer0_User_Config->Timer0_Mode == Timer0_Mode_FastPWM_NonInverting)
 1be:	93 30       	cpi	r25, 0x03	; 3
 1c0:	b1 f4       	brne	.+44     	; 0x1ee <Timer0_PWM_DutyCycle+0x7a>
	{
		OCR0 = (uint8_t)((duty_cycle/100.0)*256) - 1;
 1c2:	68 2f       	mov	r22, r24
 1c4:	70 e0       	ldi	r23, 0x00	; 0
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	0e 94 41 02 	call	0x482	; 0x482 <__floatsisf>
 1ce:	20 e0       	ldi	r18, 0x00	; 0
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	48 ec       	ldi	r20, 0xC8	; 200
 1d4:	52 e4       	ldi	r21, 0x42	; 66
 1d6:	0e 94 ab 01 	call	0x356	; 0x356 <__divsf3>
 1da:	20 e0       	ldi	r18, 0x00	; 0
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	40 e8       	ldi	r20, 0x80	; 128
 1e0:	53 e4       	ldi	r21, 0x43	; 67
 1e2:	0e 94 cd 02 	call	0x59a	; 0x59a <__mulsf3>
 1e6:	0e 94 13 02 	call	0x426	; 0x426 <__fixunssfsi>
 1ea:	61 50       	subi	r22, 0x01	; 1
 1ec:	6c bf       	out	0x3c, r22	; 60
 1ee:	08 95       	ret

000001f0 <__vector_11>:
/* ================================================================ */


//overflow ISR
ISR(TIMER0_OVF_vect)
{
 1f0:	1f 92       	push	r1
 1f2:	0f 92       	push	r0
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	0f 92       	push	r0
 1f8:	11 24       	eor	r1, r1
 1fa:	2f 93       	push	r18
 1fc:	3f 93       	push	r19
 1fe:	4f 93       	push	r20
 200:	5f 93       	push	r21
 202:	6f 93       	push	r22
 204:	7f 93       	push	r23
 206:	8f 93       	push	r24
 208:	9f 93       	push	r25
 20a:	af 93       	push	r26
 20c:	bf 93       	push	r27
 20e:	ef 93       	push	r30
 210:	ff 93       	push	r31
	GP_IRQ_CallBack();
 212:	e0 91 62 00 	lds	r30, 0x0062
 216:	f0 91 63 00 	lds	r31, 0x0063
 21a:	09 95       	icall
}
 21c:	ff 91       	pop	r31
 21e:	ef 91       	pop	r30
 220:	bf 91       	pop	r27
 222:	af 91       	pop	r26
 224:	9f 91       	pop	r25
 226:	8f 91       	pop	r24
 228:	7f 91       	pop	r23
 22a:	6f 91       	pop	r22
 22c:	5f 91       	pop	r21
 22e:	4f 91       	pop	r20
 230:	3f 91       	pop	r19
 232:	2f 91       	pop	r18
 234:	0f 90       	pop	r0
 236:	0f be       	out	0x3f, r0	; 63
 238:	0f 90       	pop	r0
 23a:	1f 90       	pop	r1
 23c:	18 95       	reti

0000023e <__vector_10>:

//compare match ISR
ISR(TIMER0_COMP_vect)
{
 23e:	1f 92       	push	r1
 240:	0f 92       	push	r0
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	0f 92       	push	r0
 246:	11 24       	eor	r1, r1
 248:	2f 93       	push	r18
 24a:	3f 93       	push	r19
 24c:	4f 93       	push	r20
 24e:	5f 93       	push	r21
 250:	6f 93       	push	r22
 252:	7f 93       	push	r23
 254:	8f 93       	push	r24
 256:	9f 93       	push	r25
 258:	af 93       	push	r26
 25a:	bf 93       	push	r27
 25c:	ef 93       	push	r30
 25e:	ff 93       	push	r31
	GP_IRQ_CallBack();
 260:	e0 91 62 00 	lds	r30, 0x0062
 264:	f0 91 63 00 	lds	r31, 0x0063
 268:	09 95       	icall
 26a:	ff 91       	pop	r31
 26c:	ef 91       	pop	r30
 26e:	bf 91       	pop	r27
 270:	af 91       	pop	r26
 272:	9f 91       	pop	r25
 274:	8f 91       	pop	r24
 276:	7f 91       	pop	r23
 278:	6f 91       	pop	r22
 27a:	5f 91       	pop	r21
 27c:	4f 91       	pop	r20
 27e:	3f 91       	pop	r19
 280:	2f 91       	pop	r18
 282:	0f 90       	pop	r0
 284:	0f be       	out	0x3f, r0	; 63
 286:	0f 90       	pop	r0
 288:	1f 90       	pop	r1
 28a:	18 95       	reti

0000028c <__subsf3>:
 28c:	50 58       	subi	r21, 0x80	; 128

0000028e <__addsf3>:
 28e:	bb 27       	eor	r27, r27
 290:	aa 27       	eor	r26, r26
 292:	0e d0       	rcall	.+28     	; 0x2b0 <__addsf3x>
 294:	48 c1       	rjmp	.+656    	; 0x526 <__fp_round>
 296:	39 d1       	rcall	.+626    	; 0x50a <__fp_pscA>
 298:	30 f0       	brcs	.+12     	; 0x2a6 <__addsf3+0x18>
 29a:	3e d1       	rcall	.+636    	; 0x518 <__fp_pscB>
 29c:	20 f0       	brcs	.+8      	; 0x2a6 <__addsf3+0x18>
 29e:	31 f4       	brne	.+12     	; 0x2ac <__addsf3+0x1e>
 2a0:	9f 3f       	cpi	r25, 0xFF	; 255
 2a2:	11 f4       	brne	.+4      	; 0x2a8 <__addsf3+0x1a>
 2a4:	1e f4       	brtc	.+6      	; 0x2ac <__addsf3+0x1e>
 2a6:	2e c1       	rjmp	.+604    	; 0x504 <__fp_nan>
 2a8:	0e f4       	brtc	.+2      	; 0x2ac <__addsf3+0x1e>
 2aa:	e0 95       	com	r30
 2ac:	e7 fb       	bst	r30, 7
 2ae:	24 c1       	rjmp	.+584    	; 0x4f8 <__fp_inf>

000002b0 <__addsf3x>:
 2b0:	e9 2f       	mov	r30, r25
 2b2:	4a d1       	rcall	.+660    	; 0x548 <__fp_split3>
 2b4:	80 f3       	brcs	.-32     	; 0x296 <__addsf3+0x8>
 2b6:	ba 17       	cp	r27, r26
 2b8:	62 07       	cpc	r22, r18
 2ba:	73 07       	cpc	r23, r19
 2bc:	84 07       	cpc	r24, r20
 2be:	95 07       	cpc	r25, r21
 2c0:	18 f0       	brcs	.+6      	; 0x2c8 <__addsf3x+0x18>
 2c2:	71 f4       	brne	.+28     	; 0x2e0 <__addsf3x+0x30>
 2c4:	9e f5       	brtc	.+102    	; 0x32c <__addsf3x+0x7c>
 2c6:	62 c1       	rjmp	.+708    	; 0x58c <__fp_zero>
 2c8:	0e f4       	brtc	.+2      	; 0x2cc <__addsf3x+0x1c>
 2ca:	e0 95       	com	r30
 2cc:	0b 2e       	mov	r0, r27
 2ce:	ba 2f       	mov	r27, r26
 2d0:	a0 2d       	mov	r26, r0
 2d2:	0b 01       	movw	r0, r22
 2d4:	b9 01       	movw	r22, r18
 2d6:	90 01       	movw	r18, r0
 2d8:	0c 01       	movw	r0, r24
 2da:	ca 01       	movw	r24, r20
 2dc:	a0 01       	movw	r20, r0
 2de:	11 24       	eor	r1, r1
 2e0:	ff 27       	eor	r31, r31
 2e2:	59 1b       	sub	r21, r25
 2e4:	99 f0       	breq	.+38     	; 0x30c <__addsf3x+0x5c>
 2e6:	59 3f       	cpi	r21, 0xF9	; 249
 2e8:	50 f4       	brcc	.+20     	; 0x2fe <__addsf3x+0x4e>
 2ea:	50 3e       	cpi	r21, 0xE0	; 224
 2ec:	68 f1       	brcs	.+90     	; 0x348 <__addsf3x+0x98>
 2ee:	1a 16       	cp	r1, r26
 2f0:	f0 40       	sbci	r31, 0x00	; 0
 2f2:	a2 2f       	mov	r26, r18
 2f4:	23 2f       	mov	r18, r19
 2f6:	34 2f       	mov	r19, r20
 2f8:	44 27       	eor	r20, r20
 2fa:	58 5f       	subi	r21, 0xF8	; 248
 2fc:	f3 cf       	rjmp	.-26     	; 0x2e4 <__addsf3x+0x34>
 2fe:	46 95       	lsr	r20
 300:	37 95       	ror	r19
 302:	27 95       	ror	r18
 304:	a7 95       	ror	r26
 306:	f0 40       	sbci	r31, 0x00	; 0
 308:	53 95       	inc	r21
 30a:	c9 f7       	brne	.-14     	; 0x2fe <__addsf3x+0x4e>
 30c:	7e f4       	brtc	.+30     	; 0x32c <__addsf3x+0x7c>
 30e:	1f 16       	cp	r1, r31
 310:	ba 0b       	sbc	r27, r26
 312:	62 0b       	sbc	r22, r18
 314:	73 0b       	sbc	r23, r19
 316:	84 0b       	sbc	r24, r20
 318:	ba f0       	brmi	.+46     	; 0x348 <__addsf3x+0x98>
 31a:	91 50       	subi	r25, 0x01	; 1
 31c:	a1 f0       	breq	.+40     	; 0x346 <__addsf3x+0x96>
 31e:	ff 0f       	add	r31, r31
 320:	bb 1f       	adc	r27, r27
 322:	66 1f       	adc	r22, r22
 324:	77 1f       	adc	r23, r23
 326:	88 1f       	adc	r24, r24
 328:	c2 f7       	brpl	.-16     	; 0x31a <__addsf3x+0x6a>
 32a:	0e c0       	rjmp	.+28     	; 0x348 <__addsf3x+0x98>
 32c:	ba 0f       	add	r27, r26
 32e:	62 1f       	adc	r22, r18
 330:	73 1f       	adc	r23, r19
 332:	84 1f       	adc	r24, r20
 334:	48 f4       	brcc	.+18     	; 0x348 <__addsf3x+0x98>
 336:	87 95       	ror	r24
 338:	77 95       	ror	r23
 33a:	67 95       	ror	r22
 33c:	b7 95       	ror	r27
 33e:	f7 95       	ror	r31
 340:	9e 3f       	cpi	r25, 0xFE	; 254
 342:	08 f0       	brcs	.+2      	; 0x346 <__addsf3x+0x96>
 344:	b3 cf       	rjmp	.-154    	; 0x2ac <__addsf3+0x1e>
 346:	93 95       	inc	r25
 348:	88 0f       	add	r24, r24
 34a:	08 f0       	brcs	.+2      	; 0x34e <__addsf3x+0x9e>
 34c:	99 27       	eor	r25, r25
 34e:	ee 0f       	add	r30, r30
 350:	97 95       	ror	r25
 352:	87 95       	ror	r24
 354:	08 95       	ret

00000356 <__divsf3>:
 356:	0c d0       	rcall	.+24     	; 0x370 <__divsf3x>
 358:	e6 c0       	rjmp	.+460    	; 0x526 <__fp_round>
 35a:	de d0       	rcall	.+444    	; 0x518 <__fp_pscB>
 35c:	40 f0       	brcs	.+16     	; 0x36e <__divsf3+0x18>
 35e:	d5 d0       	rcall	.+426    	; 0x50a <__fp_pscA>
 360:	30 f0       	brcs	.+12     	; 0x36e <__divsf3+0x18>
 362:	21 f4       	brne	.+8      	; 0x36c <__divsf3+0x16>
 364:	5f 3f       	cpi	r21, 0xFF	; 255
 366:	19 f0       	breq	.+6      	; 0x36e <__divsf3+0x18>
 368:	c7 c0       	rjmp	.+398    	; 0x4f8 <__fp_inf>
 36a:	51 11       	cpse	r21, r1
 36c:	10 c1       	rjmp	.+544    	; 0x58e <__fp_szero>
 36e:	ca c0       	rjmp	.+404    	; 0x504 <__fp_nan>

00000370 <__divsf3x>:
 370:	eb d0       	rcall	.+470    	; 0x548 <__fp_split3>
 372:	98 f3       	brcs	.-26     	; 0x35a <__divsf3+0x4>

00000374 <__divsf3_pse>:
 374:	99 23       	and	r25, r25
 376:	c9 f3       	breq	.-14     	; 0x36a <__divsf3+0x14>
 378:	55 23       	and	r21, r21
 37a:	b1 f3       	breq	.-20     	; 0x368 <__divsf3+0x12>
 37c:	95 1b       	sub	r25, r21
 37e:	55 0b       	sbc	r21, r21
 380:	bb 27       	eor	r27, r27
 382:	aa 27       	eor	r26, r26
 384:	62 17       	cp	r22, r18
 386:	73 07       	cpc	r23, r19
 388:	84 07       	cpc	r24, r20
 38a:	38 f0       	brcs	.+14     	; 0x39a <__divsf3_pse+0x26>
 38c:	9f 5f       	subi	r25, 0xFF	; 255
 38e:	5f 4f       	sbci	r21, 0xFF	; 255
 390:	22 0f       	add	r18, r18
 392:	33 1f       	adc	r19, r19
 394:	44 1f       	adc	r20, r20
 396:	aa 1f       	adc	r26, r26
 398:	a9 f3       	breq	.-22     	; 0x384 <__divsf3_pse+0x10>
 39a:	33 d0       	rcall	.+102    	; 0x402 <__divsf3_pse+0x8e>
 39c:	0e 2e       	mov	r0, r30
 39e:	3a f0       	brmi	.+14     	; 0x3ae <__divsf3_pse+0x3a>
 3a0:	e0 e8       	ldi	r30, 0x80	; 128
 3a2:	30 d0       	rcall	.+96     	; 0x404 <__divsf3_pse+0x90>
 3a4:	91 50       	subi	r25, 0x01	; 1
 3a6:	50 40       	sbci	r21, 0x00	; 0
 3a8:	e6 95       	lsr	r30
 3aa:	00 1c       	adc	r0, r0
 3ac:	ca f7       	brpl	.-14     	; 0x3a0 <__divsf3_pse+0x2c>
 3ae:	29 d0       	rcall	.+82     	; 0x402 <__divsf3_pse+0x8e>
 3b0:	fe 2f       	mov	r31, r30
 3b2:	27 d0       	rcall	.+78     	; 0x402 <__divsf3_pse+0x8e>
 3b4:	66 0f       	add	r22, r22
 3b6:	77 1f       	adc	r23, r23
 3b8:	88 1f       	adc	r24, r24
 3ba:	bb 1f       	adc	r27, r27
 3bc:	26 17       	cp	r18, r22
 3be:	37 07       	cpc	r19, r23
 3c0:	48 07       	cpc	r20, r24
 3c2:	ab 07       	cpc	r26, r27
 3c4:	b0 e8       	ldi	r27, 0x80	; 128
 3c6:	09 f0       	breq	.+2      	; 0x3ca <__divsf3_pse+0x56>
 3c8:	bb 0b       	sbc	r27, r27
 3ca:	80 2d       	mov	r24, r0
 3cc:	bf 01       	movw	r22, r30
 3ce:	ff 27       	eor	r31, r31
 3d0:	93 58       	subi	r25, 0x83	; 131
 3d2:	5f 4f       	sbci	r21, 0xFF	; 255
 3d4:	2a f0       	brmi	.+10     	; 0x3e0 <__divsf3_pse+0x6c>
 3d6:	9e 3f       	cpi	r25, 0xFE	; 254
 3d8:	51 05       	cpc	r21, r1
 3da:	68 f0       	brcs	.+26     	; 0x3f6 <__divsf3_pse+0x82>
 3dc:	8d c0       	rjmp	.+282    	; 0x4f8 <__fp_inf>
 3de:	d7 c0       	rjmp	.+430    	; 0x58e <__fp_szero>
 3e0:	5f 3f       	cpi	r21, 0xFF	; 255
 3e2:	ec f3       	brlt	.-6      	; 0x3de <__divsf3_pse+0x6a>
 3e4:	98 3e       	cpi	r25, 0xE8	; 232
 3e6:	dc f3       	brlt	.-10     	; 0x3de <__divsf3_pse+0x6a>
 3e8:	86 95       	lsr	r24
 3ea:	77 95       	ror	r23
 3ec:	67 95       	ror	r22
 3ee:	b7 95       	ror	r27
 3f0:	f7 95       	ror	r31
 3f2:	9f 5f       	subi	r25, 0xFF	; 255
 3f4:	c9 f7       	brne	.-14     	; 0x3e8 <__divsf3_pse+0x74>
 3f6:	88 0f       	add	r24, r24
 3f8:	91 1d       	adc	r25, r1
 3fa:	96 95       	lsr	r25
 3fc:	87 95       	ror	r24
 3fe:	97 f9       	bld	r25, 7
 400:	08 95       	ret
 402:	e1 e0       	ldi	r30, 0x01	; 1
 404:	66 0f       	add	r22, r22
 406:	77 1f       	adc	r23, r23
 408:	88 1f       	adc	r24, r24
 40a:	bb 1f       	adc	r27, r27
 40c:	62 17       	cp	r22, r18
 40e:	73 07       	cpc	r23, r19
 410:	84 07       	cpc	r24, r20
 412:	ba 07       	cpc	r27, r26
 414:	20 f0       	brcs	.+8      	; 0x41e <__divsf3_pse+0xaa>
 416:	62 1b       	sub	r22, r18
 418:	73 0b       	sbc	r23, r19
 41a:	84 0b       	sbc	r24, r20
 41c:	ba 0b       	sbc	r27, r26
 41e:	ee 1f       	adc	r30, r30
 420:	88 f7       	brcc	.-30     	; 0x404 <__divsf3_pse+0x90>
 422:	e0 95       	com	r30
 424:	08 95       	ret

00000426 <__fixunssfsi>:
 426:	98 d0       	rcall	.+304    	; 0x558 <__fp_splitA>
 428:	88 f0       	brcs	.+34     	; 0x44c <__fixunssfsi+0x26>
 42a:	9f 57       	subi	r25, 0x7F	; 127
 42c:	90 f0       	brcs	.+36     	; 0x452 <__fixunssfsi+0x2c>
 42e:	b9 2f       	mov	r27, r25
 430:	99 27       	eor	r25, r25
 432:	b7 51       	subi	r27, 0x17	; 23
 434:	a0 f0       	brcs	.+40     	; 0x45e <__fixunssfsi+0x38>
 436:	d1 f0       	breq	.+52     	; 0x46c <__fixunssfsi+0x46>
 438:	66 0f       	add	r22, r22
 43a:	77 1f       	adc	r23, r23
 43c:	88 1f       	adc	r24, r24
 43e:	99 1f       	adc	r25, r25
 440:	1a f0       	brmi	.+6      	; 0x448 <__fixunssfsi+0x22>
 442:	ba 95       	dec	r27
 444:	c9 f7       	brne	.-14     	; 0x438 <__fixunssfsi+0x12>
 446:	12 c0       	rjmp	.+36     	; 0x46c <__fixunssfsi+0x46>
 448:	b1 30       	cpi	r27, 0x01	; 1
 44a:	81 f0       	breq	.+32     	; 0x46c <__fixunssfsi+0x46>
 44c:	9f d0       	rcall	.+318    	; 0x58c <__fp_zero>
 44e:	b1 e0       	ldi	r27, 0x01	; 1
 450:	08 95       	ret
 452:	9c c0       	rjmp	.+312    	; 0x58c <__fp_zero>
 454:	67 2f       	mov	r22, r23
 456:	78 2f       	mov	r23, r24
 458:	88 27       	eor	r24, r24
 45a:	b8 5f       	subi	r27, 0xF8	; 248
 45c:	39 f0       	breq	.+14     	; 0x46c <__fixunssfsi+0x46>
 45e:	b9 3f       	cpi	r27, 0xF9	; 249
 460:	cc f3       	brlt	.-14     	; 0x454 <__fixunssfsi+0x2e>
 462:	86 95       	lsr	r24
 464:	77 95       	ror	r23
 466:	67 95       	ror	r22
 468:	b3 95       	inc	r27
 46a:	d9 f7       	brne	.-10     	; 0x462 <__fixunssfsi+0x3c>
 46c:	3e f4       	brtc	.+14     	; 0x47c <__fixunssfsi+0x56>
 46e:	90 95       	com	r25
 470:	80 95       	com	r24
 472:	70 95       	com	r23
 474:	61 95       	neg	r22
 476:	7f 4f       	sbci	r23, 0xFF	; 255
 478:	8f 4f       	sbci	r24, 0xFF	; 255
 47a:	9f 4f       	sbci	r25, 0xFF	; 255
 47c:	08 95       	ret

0000047e <__floatunsisf>:
 47e:	e8 94       	clt
 480:	09 c0       	rjmp	.+18     	; 0x494 <__floatsisf+0x12>

00000482 <__floatsisf>:
 482:	97 fb       	bst	r25, 7
 484:	3e f4       	brtc	.+14     	; 0x494 <__floatsisf+0x12>
 486:	90 95       	com	r25
 488:	80 95       	com	r24
 48a:	70 95       	com	r23
 48c:	61 95       	neg	r22
 48e:	7f 4f       	sbci	r23, 0xFF	; 255
 490:	8f 4f       	sbci	r24, 0xFF	; 255
 492:	9f 4f       	sbci	r25, 0xFF	; 255
 494:	99 23       	and	r25, r25
 496:	a9 f0       	breq	.+42     	; 0x4c2 <__floatsisf+0x40>
 498:	f9 2f       	mov	r31, r25
 49a:	96 e9       	ldi	r25, 0x96	; 150
 49c:	bb 27       	eor	r27, r27
 49e:	93 95       	inc	r25
 4a0:	f6 95       	lsr	r31
 4a2:	87 95       	ror	r24
 4a4:	77 95       	ror	r23
 4a6:	67 95       	ror	r22
 4a8:	b7 95       	ror	r27
 4aa:	f1 11       	cpse	r31, r1
 4ac:	f8 cf       	rjmp	.-16     	; 0x49e <__floatsisf+0x1c>
 4ae:	fa f4       	brpl	.+62     	; 0x4ee <__floatsisf+0x6c>
 4b0:	bb 0f       	add	r27, r27
 4b2:	11 f4       	brne	.+4      	; 0x4b8 <__floatsisf+0x36>
 4b4:	60 ff       	sbrs	r22, 0
 4b6:	1b c0       	rjmp	.+54     	; 0x4ee <__floatsisf+0x6c>
 4b8:	6f 5f       	subi	r22, 0xFF	; 255
 4ba:	7f 4f       	sbci	r23, 0xFF	; 255
 4bc:	8f 4f       	sbci	r24, 0xFF	; 255
 4be:	9f 4f       	sbci	r25, 0xFF	; 255
 4c0:	16 c0       	rjmp	.+44     	; 0x4ee <__floatsisf+0x6c>
 4c2:	88 23       	and	r24, r24
 4c4:	11 f0       	breq	.+4      	; 0x4ca <__floatsisf+0x48>
 4c6:	96 e9       	ldi	r25, 0x96	; 150
 4c8:	11 c0       	rjmp	.+34     	; 0x4ec <__floatsisf+0x6a>
 4ca:	77 23       	and	r23, r23
 4cc:	21 f0       	breq	.+8      	; 0x4d6 <__floatsisf+0x54>
 4ce:	9e e8       	ldi	r25, 0x8E	; 142
 4d0:	87 2f       	mov	r24, r23
 4d2:	76 2f       	mov	r23, r22
 4d4:	05 c0       	rjmp	.+10     	; 0x4e0 <__floatsisf+0x5e>
 4d6:	66 23       	and	r22, r22
 4d8:	71 f0       	breq	.+28     	; 0x4f6 <__floatsisf+0x74>
 4da:	96 e8       	ldi	r25, 0x86	; 134
 4dc:	86 2f       	mov	r24, r22
 4de:	70 e0       	ldi	r23, 0x00	; 0
 4e0:	60 e0       	ldi	r22, 0x00	; 0
 4e2:	2a f0       	brmi	.+10     	; 0x4ee <__floatsisf+0x6c>
 4e4:	9a 95       	dec	r25
 4e6:	66 0f       	add	r22, r22
 4e8:	77 1f       	adc	r23, r23
 4ea:	88 1f       	adc	r24, r24
 4ec:	da f7       	brpl	.-10     	; 0x4e4 <__floatsisf+0x62>
 4ee:	88 0f       	add	r24, r24
 4f0:	96 95       	lsr	r25
 4f2:	87 95       	ror	r24
 4f4:	97 f9       	bld	r25, 7
 4f6:	08 95       	ret

000004f8 <__fp_inf>:
 4f8:	97 f9       	bld	r25, 7
 4fa:	9f 67       	ori	r25, 0x7F	; 127
 4fc:	80 e8       	ldi	r24, 0x80	; 128
 4fe:	70 e0       	ldi	r23, 0x00	; 0
 500:	60 e0       	ldi	r22, 0x00	; 0
 502:	08 95       	ret

00000504 <__fp_nan>:
 504:	9f ef       	ldi	r25, 0xFF	; 255
 506:	80 ec       	ldi	r24, 0xC0	; 192
 508:	08 95       	ret

0000050a <__fp_pscA>:
 50a:	00 24       	eor	r0, r0
 50c:	0a 94       	dec	r0
 50e:	16 16       	cp	r1, r22
 510:	17 06       	cpc	r1, r23
 512:	18 06       	cpc	r1, r24
 514:	09 06       	cpc	r0, r25
 516:	08 95       	ret

00000518 <__fp_pscB>:
 518:	00 24       	eor	r0, r0
 51a:	0a 94       	dec	r0
 51c:	12 16       	cp	r1, r18
 51e:	13 06       	cpc	r1, r19
 520:	14 06       	cpc	r1, r20
 522:	05 06       	cpc	r0, r21
 524:	08 95       	ret

00000526 <__fp_round>:
 526:	09 2e       	mov	r0, r25
 528:	03 94       	inc	r0
 52a:	00 0c       	add	r0, r0
 52c:	11 f4       	brne	.+4      	; 0x532 <__fp_round+0xc>
 52e:	88 23       	and	r24, r24
 530:	52 f0       	brmi	.+20     	; 0x546 <__fp_round+0x20>
 532:	bb 0f       	add	r27, r27
 534:	40 f4       	brcc	.+16     	; 0x546 <__fp_round+0x20>
 536:	bf 2b       	or	r27, r31
 538:	11 f4       	brne	.+4      	; 0x53e <__fp_round+0x18>
 53a:	60 ff       	sbrs	r22, 0
 53c:	04 c0       	rjmp	.+8      	; 0x546 <__fp_round+0x20>
 53e:	6f 5f       	subi	r22, 0xFF	; 255
 540:	7f 4f       	sbci	r23, 0xFF	; 255
 542:	8f 4f       	sbci	r24, 0xFF	; 255
 544:	9f 4f       	sbci	r25, 0xFF	; 255
 546:	08 95       	ret

00000548 <__fp_split3>:
 548:	57 fd       	sbrc	r21, 7
 54a:	90 58       	subi	r25, 0x80	; 128
 54c:	44 0f       	add	r20, r20
 54e:	55 1f       	adc	r21, r21
 550:	59 f0       	breq	.+22     	; 0x568 <__fp_splitA+0x10>
 552:	5f 3f       	cpi	r21, 0xFF	; 255
 554:	71 f0       	breq	.+28     	; 0x572 <__fp_splitA+0x1a>
 556:	47 95       	ror	r20

00000558 <__fp_splitA>:
 558:	88 0f       	add	r24, r24
 55a:	97 fb       	bst	r25, 7
 55c:	99 1f       	adc	r25, r25
 55e:	61 f0       	breq	.+24     	; 0x578 <__fp_splitA+0x20>
 560:	9f 3f       	cpi	r25, 0xFF	; 255
 562:	79 f0       	breq	.+30     	; 0x582 <__fp_splitA+0x2a>
 564:	87 95       	ror	r24
 566:	08 95       	ret
 568:	12 16       	cp	r1, r18
 56a:	13 06       	cpc	r1, r19
 56c:	14 06       	cpc	r1, r20
 56e:	55 1f       	adc	r21, r21
 570:	f2 cf       	rjmp	.-28     	; 0x556 <__fp_split3+0xe>
 572:	46 95       	lsr	r20
 574:	f1 df       	rcall	.-30     	; 0x558 <__fp_splitA>
 576:	08 c0       	rjmp	.+16     	; 0x588 <__fp_splitA+0x30>
 578:	16 16       	cp	r1, r22
 57a:	17 06       	cpc	r1, r23
 57c:	18 06       	cpc	r1, r24
 57e:	99 1f       	adc	r25, r25
 580:	f1 cf       	rjmp	.-30     	; 0x564 <__fp_splitA+0xc>
 582:	86 95       	lsr	r24
 584:	71 05       	cpc	r23, r1
 586:	61 05       	cpc	r22, r1
 588:	08 94       	sec
 58a:	08 95       	ret

0000058c <__fp_zero>:
 58c:	e8 94       	clt

0000058e <__fp_szero>:
 58e:	bb 27       	eor	r27, r27
 590:	66 27       	eor	r22, r22
 592:	77 27       	eor	r23, r23
 594:	cb 01       	movw	r24, r22
 596:	97 f9       	bld	r25, 7
 598:	08 95       	ret

0000059a <__mulsf3>:
 59a:	0b d0       	rcall	.+22     	; 0x5b2 <__mulsf3x>
 59c:	c4 cf       	rjmp	.-120    	; 0x526 <__fp_round>
 59e:	b5 df       	rcall	.-150    	; 0x50a <__fp_pscA>
 5a0:	28 f0       	brcs	.+10     	; 0x5ac <__mulsf3+0x12>
 5a2:	ba df       	rcall	.-140    	; 0x518 <__fp_pscB>
 5a4:	18 f0       	brcs	.+6      	; 0x5ac <__mulsf3+0x12>
 5a6:	95 23       	and	r25, r21
 5a8:	09 f0       	breq	.+2      	; 0x5ac <__mulsf3+0x12>
 5aa:	a6 cf       	rjmp	.-180    	; 0x4f8 <__fp_inf>
 5ac:	ab cf       	rjmp	.-170    	; 0x504 <__fp_nan>
 5ae:	11 24       	eor	r1, r1
 5b0:	ee cf       	rjmp	.-36     	; 0x58e <__fp_szero>

000005b2 <__mulsf3x>:
 5b2:	ca df       	rcall	.-108    	; 0x548 <__fp_split3>
 5b4:	a0 f3       	brcs	.-24     	; 0x59e <__mulsf3+0x4>

000005b6 <__mulsf3_pse>:
 5b6:	95 9f       	mul	r25, r21
 5b8:	d1 f3       	breq	.-12     	; 0x5ae <__mulsf3+0x14>
 5ba:	95 0f       	add	r25, r21
 5bc:	50 e0       	ldi	r21, 0x00	; 0
 5be:	55 1f       	adc	r21, r21
 5c0:	62 9f       	mul	r22, r18
 5c2:	f0 01       	movw	r30, r0
 5c4:	72 9f       	mul	r23, r18
 5c6:	bb 27       	eor	r27, r27
 5c8:	f0 0d       	add	r31, r0
 5ca:	b1 1d       	adc	r27, r1
 5cc:	63 9f       	mul	r22, r19
 5ce:	aa 27       	eor	r26, r26
 5d0:	f0 0d       	add	r31, r0
 5d2:	b1 1d       	adc	r27, r1
 5d4:	aa 1f       	adc	r26, r26
 5d6:	64 9f       	mul	r22, r20
 5d8:	66 27       	eor	r22, r22
 5da:	b0 0d       	add	r27, r0
 5dc:	a1 1d       	adc	r26, r1
 5de:	66 1f       	adc	r22, r22
 5e0:	82 9f       	mul	r24, r18
 5e2:	22 27       	eor	r18, r18
 5e4:	b0 0d       	add	r27, r0
 5e6:	a1 1d       	adc	r26, r1
 5e8:	62 1f       	adc	r22, r18
 5ea:	73 9f       	mul	r23, r19
 5ec:	b0 0d       	add	r27, r0
 5ee:	a1 1d       	adc	r26, r1
 5f0:	62 1f       	adc	r22, r18
 5f2:	83 9f       	mul	r24, r19
 5f4:	a0 0d       	add	r26, r0
 5f6:	61 1d       	adc	r22, r1
 5f8:	22 1f       	adc	r18, r18
 5fa:	74 9f       	mul	r23, r20
 5fc:	33 27       	eor	r19, r19
 5fe:	a0 0d       	add	r26, r0
 600:	61 1d       	adc	r22, r1
 602:	23 1f       	adc	r18, r19
 604:	84 9f       	mul	r24, r20
 606:	60 0d       	add	r22, r0
 608:	21 1d       	adc	r18, r1
 60a:	82 2f       	mov	r24, r18
 60c:	76 2f       	mov	r23, r22
 60e:	6a 2f       	mov	r22, r26
 610:	11 24       	eor	r1, r1
 612:	9f 57       	subi	r25, 0x7F	; 127
 614:	50 40       	sbci	r21, 0x00	; 0
 616:	8a f0       	brmi	.+34     	; 0x63a <__mulsf3_pse+0x84>
 618:	e1 f0       	breq	.+56     	; 0x652 <__mulsf3_pse+0x9c>
 61a:	88 23       	and	r24, r24
 61c:	4a f0       	brmi	.+18     	; 0x630 <__mulsf3_pse+0x7a>
 61e:	ee 0f       	add	r30, r30
 620:	ff 1f       	adc	r31, r31
 622:	bb 1f       	adc	r27, r27
 624:	66 1f       	adc	r22, r22
 626:	77 1f       	adc	r23, r23
 628:	88 1f       	adc	r24, r24
 62a:	91 50       	subi	r25, 0x01	; 1
 62c:	50 40       	sbci	r21, 0x00	; 0
 62e:	a9 f7       	brne	.-22     	; 0x61a <__mulsf3_pse+0x64>
 630:	9e 3f       	cpi	r25, 0xFE	; 254
 632:	51 05       	cpc	r21, r1
 634:	70 f0       	brcs	.+28     	; 0x652 <__mulsf3_pse+0x9c>
 636:	60 cf       	rjmp	.-320    	; 0x4f8 <__fp_inf>
 638:	aa cf       	rjmp	.-172    	; 0x58e <__fp_szero>
 63a:	5f 3f       	cpi	r21, 0xFF	; 255
 63c:	ec f3       	brlt	.-6      	; 0x638 <__mulsf3_pse+0x82>
 63e:	98 3e       	cpi	r25, 0xE8	; 232
 640:	dc f3       	brlt	.-10     	; 0x638 <__mulsf3_pse+0x82>
 642:	86 95       	lsr	r24
 644:	77 95       	ror	r23
 646:	67 95       	ror	r22
 648:	b7 95       	ror	r27
 64a:	f7 95       	ror	r31
 64c:	e7 95       	ror	r30
 64e:	9f 5f       	subi	r25, 0xFF	; 255
 650:	c1 f7       	brne	.-16     	; 0x642 <__mulsf3_pse+0x8c>
 652:	fe 2b       	or	r31, r30
 654:	88 0f       	add	r24, r24
 656:	91 1d       	adc	r25, r1
 658:	96 95       	lsr	r25
 65a:	87 95       	ror	r24
 65c:	97 f9       	bld	r25, 7
 65e:	08 95       	ret

00000660 <_exit>:
 660:	f8 94       	cli

00000662 <__stop_program>:
 662:	ff cf       	rjmp	.-2      	; 0x662 <__stop_program>
